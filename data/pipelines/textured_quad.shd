include "pipelines/common.glsl"

common [[
	layout(std140, binding = 4) uniform Drawcall {
		uniform vec4 u_offset_scale;
		uniform vec4 u_channel_mask;
	};
]]

vertex_shader [[
	layout (location = 0) out vec2 v_uv;
	void main() {
		vec4 pos = fullscreenQuad(gl_VertexID, v_uv);
		pos.xy = pos.xy * u_offset_scale.zw + u_offset_scale.xy;
		pos.y = -pos.y;
		gl_Position = pos;
	}
]]


fragment_shader [[
	layout (binding=0) uniform sampler2D u_texture;
	layout (location = 0) in vec2 v_uv;
	layout (location = 0) out vec4 o_color;
	void main() {
		#ifdef ORIGIN_BOTTOM_LEFT
			o_color = textureLod(u_texture, v_uv, 0);
		#else
			o_color = textureLod(u_texture, vec2(v_uv.x, -v_uv.y), 0);
		#endif
		if (u_channel_mask.a <= 0) {
			o_color.rgb *= u_channel_mask.rgb;
			o_color.a = 1;
		}
		else
			o_color *= u_channel_mask;
	}
]]